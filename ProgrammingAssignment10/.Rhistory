p.mat <- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], method = method)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
p.mat <- cor.mtest(data, method = method)
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(mat,
method = "color", col = col(200), number.font = number.font,
mar = mar, number.cex = number.cex,
type = type, order = order,
addCoef.col = "black", # add correlation coefficient
tl.col = "black", tl.srt = tl.srt, # rotation of text labels
# combine with significance level
p.mat = p.mat, sig.level = sig.level, insig = "blank",
# hide correlation coefficiens on the diagonal
diag = diag
)
}
corrplot2(
data = dat,
method = "pearson",
sig.level = 0.05,
order = "original",
diag = FALSE,
type = "upper",
tl.srt = 75
)
install.packages("corrplot")
corrplot2 <- function(data,
method = "pearson",
sig.level = 0.05,
order = "original",
diag = FALSE,
type = "upper",
tl.srt = 90,
number.font = 1,
number.cex = 1,
mar = c(0, 0, 0, 0)) {
library(corrplot)
data_incomplete <- data
data <- data[complete.cases(data), ]
mat <- cor(data, method = method)
cor.mtest <- function(mat, method) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat <- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], method = method)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
p.mat <- cor.mtest(data, method = method)
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(mat,
method = "color", col = col(200), number.font = number.font,
mar = mar, number.cex = number.cex,
type = type, order = order,
addCoef.col = "black", # add correlation coefficient
tl.col = "black", tl.srt = tl.srt, # rotation of text labels
# combine with significance level
p.mat = p.mat, sig.level = sig.level, insig = "blank",
# hide correlation coefficiens on the diagonal
diag = diag
)
}
corrplot2(
data = dat,
method = "pearson",
sig.level = 0.05,
order = "original",
diag = FALSE,
type = "upper",
tl.srt = 75
)
corrplot2 <- function(data,
method = "pearson",
sig.level = 0.05,
order = "original",
diag = FALSE,
type = "upper",
tl.srt = 90,
number.font = 1,
number.cex = 1,
mar = c(0, 0, 0, 0)) {
library(corrplot)
data_incomplete <- data
data <- data[complete.cases(data), ]
mat <- cor(data, method = method)
cor.mtest <- function(mat, method) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat <- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], method = method)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
p.mat <- cor.mtest(data, method = method)
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(mat,
method = "color", col = col(200), number.font = number.font,
mar = mar, number.cex = number.cex,
type = type, order = order,
addCoef.col = "black", # add correlation coefficient
tl.col = "black", tl.srt = tl.srt, # rotation of text labels
# combine with significance level
p.mat = p.mat, sig.level = sig.level, insig = "blank",
# hide correlation coefficiens on the diagonal
diag = diag
)
}
corrplot2(
data = college,
method = "pearson",
sig.level = 0.05,
order = "original",
diag = FALSE,
type = "upper",
tl.srt = 75
)
college
str(college)
college <- na.omit(college)
college$major <- factor(college$major)
college$code <- factor(college$code)
college <- na.omit(college)
college$major <- as.factor(college$major)
college$code <- as.factor(college$code)
college <- na.omit(college)
college$major <- as.factor(college$major)
college$major_code <- as.factor(college$major_code)
college$major_category <- as.factor(college$major_category)
corrplot2 <- function(data,
method = "pearson",
sig.level = 0.05,
order = "original",
diag = FALSE,
type = "upper",
tl.srt = 90,
number.font = 1,
number.cex = 1,
mar = c(0, 0, 0, 0)) {
library(corrplot)
data_incomplete <- data
data <- data[complete.cases(data), ]
mat <- cor(data, method = method)
cor.mtest <- function(mat, method) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat <- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], method = method)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
p.mat <- cor.mtest(data, method = method)
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(mat,
method = "color", col = col(200), number.font = number.font,
mar = mar, number.cex = number.cex,
type = type, order = order,
addCoef.col = "black", # add correlation coefficient
tl.col = "black", tl.srt = tl.srt, # rotation of text labels
# combine with significance level
p.mat = p.mat, sig.level = sig.level, insig = "blank",
# hide correlation coefficiens on the diagonal
diag = diag
)
}
corrplot2(
data = college,
method = "pearson",
sig.level = 0.05,
order = "original",
diag = FALSE,
type = "upper",
tl.srt = 75
)
lappy(college,class())
lappy(college,class)
lapply(college,class)
college.numeric <- college[,sapply(college, is.numeric)]
college.numeric
college <- na.omit(college)
college$rank <- as.factor(college$rank)
college$major <- as.factor(college$major)
college$major_code <- as.factor(college$major_code)
college$major_category <- as.factor(college$major_category)
corrplot2 <- function(data,
method = "pearson",
sig.level = 0.05,
order = "original",
diag = FALSE,
type = "upper",
tl.srt = 90,
number.font = 1,
number.cex = 1,
mar = c(0, 0, 0, 0)) {
library(corrplot)
data_incomplete <- data
data <- data[complete.cases(data), ]
mat <- cor(data, method = method)
cor.mtest <- function(mat, method) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat <- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], method = method)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
p.mat <- cor.mtest(data, method = method)
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(mat,
method = "color", col = col(200), number.font = number.font,
mar = mar, number.cex = number.cex,
type = type, order = order,
addCoef.col = "black", # add correlation coefficient
tl.col = "black", tl.srt = tl.srt, # rotation of text labels
# combine with significance level
p.mat = p.mat, sig.level = sig.level, insig = "blank",
# hide correlation coefficiens on the diagonal
diag = diag
)
}
corrplot2(
data = college.numeric,
method = "pearson",
sig.level = 0.05,
order = "original",
diag = FALSE,
type = "upper",
tl.srt = 75
)
device.off()
dev.off()
plot.new()
corrplot2(
data = college.numeric,
method = "pearson",
sig.level = 0.05,
order = "original",
diag = FALSE,
type = "upper",
tl.srt = 75
)
pairs(college.numeric)
#install.packages("devtools")
devtools::install_github("jhudsl/collegeIncome")
library(collegeIncome)
data(college)
devtools::install_github("jhudsl/matahari")
library(matahari)
dance_start(value = FALSE, contents = FALSE)
head(college)
tail(college)
college <- na.omit(college)
college$rank <- as.factor(college$rank)
college$major <- as.factor(college$major)
college$major_code <- as.factor(college$major_code)
college$major_category <- as.factor(college$major_category)
## Subset numeric column
college.numeric <- college[,sapply(college, is.numeric)]
corrplot2 <- function(data,
method = "pearson",
sig.level = 0.05,
order = "original",
diag = FALSE,
type = "upper",
tl.srt = 90,
number.font = 1,
number.cex = 1,
mar = c(0, 0, 0, 0)) {
library(corrplot)
data_incomplete <- data
data <- data[complete.cases(data), ]
mat <- cor(data, method = method)
cor.mtest <- function(mat, method) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat <- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], method = method)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
p.mat <- cor.mtest(data, method = method)
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(mat,
method = "color", col = col(200), number.font = number.font,
mar = mar, number.cex = number.cex,
type = type, order = order,
addCoef.col = "black", # add correlation coefficient
tl.col = "black", tl.srt = tl.srt, # rotation of text labels
# combine with significance level
p.mat = p.mat, sig.level = sig.level, insig = "blank",
# hide correlation coefficiens on the diagonal
diag = diag
)
}
corrplot2(
data = college.numeric,
method = "pearson",
sig.level = 0.05,
order = "original",
diag = FALSE,
type = "upper",
tl.srt = 75
)
corrplot2
corrplot2(
data = college.numeric,
method = "pearson",
sig.level = 0.05,
order = "original",
diag = FALSE,
type = "upper",
tl.srt = 75
)
corrplot2(
data = college.numeric,
method = "pearson",
sig.level = 0.05,
order = "original",
diag = FALSE,
type = "upper"
)
pairs(college.numeric)
str(college)
boxplot(median/1000 ~ major_category, data = college, main = "Income vs. Major", ylab="Income (thousands of dollar)", las = 2)
unique(college$major_category)
boxplot(median/1000 ~ major_category, data = college, main = "Income vs. Major", ylab="Income (thousands of dollar)", las = 2)
unique(college$major_category)
college <- college[order(college$major_category),]
college <- college[order(college$major_category),]
major_category_ref <- relevel(college$major_category, "Arts")
fit <- lm(median ~ major_category_ref, data = college)
summary(fit)$coef
A <- matrix(, nrow = 16, ncol = 16)
for (i in 1:16){
major_category_ref <- relevel(college$major_category, as.character(unique(college$major_category)[i]))
fit <- lm(median ~ major_category_ref, data = college)
tmp <- summary(fit)$coef[,4]
# swap the first element to the corresponding position in the diagonal matrix
tmp1 <- tmp[1:i]
tmp1 <- c(0,tmp1)
tmp1 <- c(tmp1[-2],tmp1[2])
tmp1 <- tmp1[-1]
# save to A
A[,i] <- c(tmp1,tmp[-(1:i)])
A <- matrix(, nrow = 16, ncol = 16)
for (i in 1:16){
major_category_ref <- relevel(college$major_category, as.character(unique(college$major_category)[i]))
fit <- lm(median ~ major_category_ref, data = college)
tmp <- summary(fit)$coef[,4]
# swap the first element to the corresponding position in the diagonal matrix
tmp1 <- tmp[1:i]
tmp1 <- c(0,tmp1)
tmp1 <- c(tmp1[-2],tmp1[2])
tmp1 <- tmp1[-1]
# save to A
A[,i] <- c(tmp1,tmp[-(1:i)])
}
#install.packages("devtools")
devtools::install_github("jhudsl/collegeIncome")
library(reshape)
install.packages("reshape")
#install.packages("devtools")
devtools::install_github("jhudsl/collegeIncome")
library(reshape)
library(ggplot2)
library(collegeIncome)
data(college)
B <- data.frame(A)
names(B) <- unique(college$major_category)
B$major <- unique(college$major_category)
Bmelt <- melt(B)
Bmelt
g = ggplot(data=Bmelt, aes(x=variable, y=major, fill=value))
g = g + geom_tile()
g = g + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + ylab("Major") + xlab("Major")
g = g + ggtitle("Probability of difference in Income between Majors")
g = g + coord_fixed()
g
g
g = ggplot(data=Bmelt, aes(x=variable, y=major, fill=value < 0.025))
g = g + geom_tile()
g = g + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + ylab("Major") + xlab("Major")
g = g + ggtitle("Difference in Income between Majors")
g = g + coord_fixed()
g
g = ggplot(data=Bmelt, aes(x=variable, y=major, fill=value < 0.025))
g = g + geom_tile()
g = g + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + ylab("Major") + xlab("Major")
g = g + ggtitle("Difference in Income between Majors")
g = g + coord_fixed()
g
g = ggplot(data=Bmelt, aes(x=variable, y=major, fill=value < 0.025))
g = g + geom_tile()
g = g + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + ylab("Major") + xlab("Major")
g = g + ggtitle("Difference in Income between Majors")
g = g + coord_fixed()
g
major_category_ref <- relevel(college$major_category, "Business")
major_category_ref <- relevel(college$major_category, "Business")
major_category_ref <- relevel(college$major_category, "Business")
major_category_ref <- relevel(college$major_category, "Business")
major_category_ref <- relevel(college$major_category, "Arts")
college <- college[order(college$major_category),]
major_category_ref <- relevel(college$major_category, "Arts")
#install.packages("devtools")
devtools::install_github("jhudsl/collegeIncome")
library(reshape)
library(ggplot2)
library(collegeIncome)
data(college)
devtools::install_github("jhudsl/matahari")
library(matahari)
dance_start(value = FALSE, contents = FALSE)
dance_start(value = FALSE, contents = FALSE)
head(college)
tail(college)
str(college)
college <- na.omit(college)
college$rank <- as.factor(college$rank)
college$major <- as.factor(college$major)
college$major_code <- as.factor(college$major_code)
college$major_category <- as.factor(college$major_category)
## Subset numeric column
#college.numeric <- college[,sapply(college, is.numeric)]
boxplot(median/1000 ~ major_category, data = college, main = "Income vs. Major", ylab="Income (thousands of dollar)", las = 2)
unique(college$major_category)
major_category_ref <- relevel(college$major_category, "Arts")
fit <- lm(median ~ major_category_ref, data = college)
summary(fit)$coef
A <- matrix(, nrow = 16, ncol = 16)
for (i in 1:16){
major_category_ref <- relevel(college$major_category, as.character(unique(college$major_category)[i]))
fit <- lm(median ~ major_category_ref, data = college)
tmp <- summary(fit)$coef[,4]
# swap the first element to the corresponding position in the diagonal matrix
tmp1 <- tmp[1:i]
tmp1 <- c(0,tmp1)
tmp1 <- c(tmp1[-2],tmp1[2])
tmp1 <- tmp1[-1]
# save to A
A[,i] <- c(tmp1,tmp[-(1:i)])
}
B <- data.frame(A)
names(B) <- unique(college$major_category)
B$major <- unique(college$major_category)
Bmelt <- melt(B)
g = ggplot(data=Bmelt, aes(x=variable, y=major, fill=value))
g = g + geom_tile()
g = g + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + ylab("Major") + xlab("Major")
g = g + ggtitle("Probability of difference in Income between Majors")
g = g + coord_fixed()
g
g = ggplot(data=Bmelt, aes(x=variable, y=major, fill=value < 0.025))
g = g + geom_tile()
g = g + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + ylab("Major") + xlab("Major")
g = g + ggtitle("Difference in Income between Majors")
g = g + coord_fixed()
g
major_category_ref <- relevel(college$major_category, "Business")
fit <- lm(median ~ major_category_ref, data = college)
summary(fit)$coef
business_diff <- summary(fit)$coef[-1,]
business_diff[order(business_diff[,4])[1:5],]
dance_save("~/Desktop/college_major_analysis.rds")
#install.packages("devtools")
devtools::install_github("jhudsl/collegeIncome")
library(reshape)
library(ggplot2)
library(collegeIncome)
data(college)
devtools::install_github("jhudsl/matahari")
library(matahari)
dance_start(value = FALSE, contents = FALSE)
dance_save("college_major_analysis.rds")
